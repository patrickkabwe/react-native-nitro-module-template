///
/// HybridSumSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridSumSpec``
public protocol HybridSumSpec_protocol: AnyObject {
  // Properties
  

  // Methods
  func add(num1: Double, num2: Double) throws -> Double
}

/// See ``HybridSumSpec``
public class HybridSumSpec_base: HybridObjectSpec {
  private weak var cxxWrapper: HybridSumSpec_cxx? = nil
  public func getCxxWrapper() -> HybridSumSpec_cxx {
  #if DEBUG
    guard self is HybridSumSpec else {
      fatalError("`self` is not a `HybridSumSpec`! Did you accidentally inherit from `HybridSumSpec_base` instead of `HybridSumSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridSumSpec_cxx(self as! HybridSumSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
  public var memorySize: Int { return 0 }
}

/**
 * A Swift base-protocol representing the Sum HybridObject.
 * Implement this protocol to create Swift-based instances of Sum.
 * ```swift
 * class HybridSum : HybridSumSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridSumSpec = HybridSumSpec_protocol & HybridSumSpec_base
